name: CVE scan new 123

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  cve_scan:
    name: CVE scan on dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: Get cached database
        uses: actions/cache@v2
        with:
          path: ~/.cache/cve-bin-tool
          key: ${{ runner.os }}-cve-bin-tool-${{ steps.get-date.outputs.date }}
      - name: Install dependencies and cve-bin-tool
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          pip install -r requirements.txt     
      - name: Scan built package
#          Here, we are scanning built wheel which is situated in /dist directory
#          Python stores built packages in /dist directory.
#          You need to replace it with the directory where you have stored built package
        run: cve-bin-tool dist -f html -o cve-bin-tool-report.html -x
#          Alternatively if you have written config file for cve-bin-tool you can use following command
#          cve-bin-tool -C path/to/cve_bin_tool_config.toml
        continue-on-error: true
#          You need to set continue_on_error: true because CVE Binary Tool sets number of cves
#          as exit code. And GitHub terminates action when process produces
#          nonzero exit code status.    
      - name: Upload report as an artifact
        uses: actions/upload-artifact@v2
        with:
            name: cve_report
            path: 'cve-bin-tool-report.html'

      
